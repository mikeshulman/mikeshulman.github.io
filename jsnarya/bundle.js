/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/ansi-regex/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n\n\n//# sourceURL=webpack:///./node_modules/ansi-regex/index.js?");

/***/ }),

/***/ "./node_modules/emoji-regex/index.js":
/*!*******************************************!*\
  !*** ./node_modules/emoji-regex/index.js ***!
  \*******************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n\n\n//# sourceURL=webpack:///./node_modules/emoji-regex/index.js?");

/***/ }),

/***/ "./node_modules/is-fullwidth-code-point/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/is-fullwidth-code-point/index.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("/* eslint-disable yoda */\n\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports[\"default\"] = isFullwidthCodePoint;\n\n\n//# sourceURL=webpack:///./node_modules/is-fullwidth-code-point/index.js?");

/***/ }),

/***/ "./node_modules/string-width/index.js":
/*!********************************************!*\
  !*** ./node_modules/string-width/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst stripAnsi = __webpack_require__(/*! strip-ansi */ \"./node_modules/strip-ansi/index.js\");\nconst isFullwidthCodePoint = __webpack_require__(/*! is-fullwidth-code-point */ \"./node_modules/is-fullwidth-code-point/index.js\");\nconst emojiRegex = __webpack_require__(/*! emoji-regex */ \"./node_modules/emoji-regex/index.js\");\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports[\"default\"] = stringWidth;\n\n\n//# sourceURL=webpack:///./node_modules/string-width/index.js?");

/***/ }),

/***/ "./node_modules/strip-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst ansiRegex = __webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-regex/index.js\");\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n\n\n//# sourceURL=webpack:///./node_modules/strip-ansi/index.js?");

/***/ }),

/***/ "./node_modules/xterm-readline/lib/highlight.js":
/*!******************************************************!*\
  !*** ./node_modules/xterm-readline/lib/highlight.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdentityHighlighter = void 0;\nclass IdentityHighlighter {\n    highlight(line, pos) {\n        return line;\n    }\n    highlightPrompt(prompt) {\n        return prompt;\n    }\n    highlightChar(line, pos) {\n        return false;\n    }\n}\nexports.IdentityHighlighter = IdentityHighlighter;\n//# sourceMappingURL=highlight.js.map\n\n//# sourceURL=webpack:///./node_modules/xterm-readline/lib/highlight.js?");

/***/ }),

/***/ "./node_modules/xterm-readline/lib/history.js":
/*!****************************************************!*\
  !*** ./node_modules/xterm-readline/lib/history.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.History = void 0;\nclass History {\n    constructor(maxEntries) {\n        this.entries = [];\n        this.cursor = -1;\n        this.maxEntries = maxEntries;\n    }\n    saveToLocalStorage() {\n        const localStorage = window === null || window === void 0 ? void 0 : window.localStorage;\n        if (localStorage !== undefined) {\n            localStorage.setItem(\"history\", JSON.stringify(this.entries));\n        }\n    }\n    restoreFromLocalStorage() {\n        const localStorage = window === null || window === void 0 ? void 0 : window.localStorage;\n        if (localStorage !== undefined) {\n            const historyJson = localStorage.getItem(\"history\");\n            if (historyJson === undefined || historyJson === null) {\n                return;\n            }\n            try {\n                const historyEntries = JSON.parse(historyJson);\n                if (!Array.isArray(historyEntries) ||\n                    historyEntries.find((it) => typeof it !== \"string\") !== undefined) {\n                    this.entries = [];\n                    localStorage.setItem(\"history\", \"[]\");\n                }\n                else {\n                    this.entries = historyEntries;\n                }\n            }\n            catch (e) {\n                this.entries = [];\n                localStorage.setItem(\"history\", \"[]\");\n            }\n        }\n    }\n    append(text) {\n        this.resetCursor();\n        if (!this.entries.includes(text)) {\n            this.entries.unshift(text);\n        }\n        else {\n            this.entries.splice(this.entries.indexOf(text), 1);\n            this.entries.unshift(text);\n        }\n        if (this.entries.length > this.maxEntries) {\n            this.entries.pop();\n        }\n        this.saveToLocalStorage();\n    }\n    resetCursor() {\n        this.cursor = -1;\n    }\n    next() {\n        if (this.cursor === -1) {\n            return undefined;\n        }\n        else {\n            this.cursor -= 1;\n        }\n        return this.entries[this.cursor];\n    }\n    prev() {\n        if (this.cursor + 1 >= this.entries.length) {\n            return undefined;\n        }\n        else {\n            this.cursor += 1;\n        }\n        return this.entries[this.cursor];\n    }\n}\nexports.History = History;\n//# sourceMappingURL=history.js.map\n\n//# sourceURL=webpack:///./node_modules/xterm-readline/lib/history.js?");

/***/ }),

/***/ "./node_modules/xterm-readline/lib/keymap.js":
/*!***************************************************!*\
  !*** ./node_modules/xterm-readline/lib/keymap.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseInput = exports.InputType = void 0;\nvar InputType;\n(function (InputType) {\n    InputType[InputType[\"Text\"] = 0] = \"Text\";\n    InputType[InputType[\"AltEnter\"] = 1] = \"AltEnter\";\n    InputType[InputType[\"ArrowUp\"] = 2] = \"ArrowUp\";\n    InputType[InputType[\"ArrowDown\"] = 3] = \"ArrowDown\";\n    InputType[InputType[\"ArrowLeft\"] = 4] = \"ArrowLeft\";\n    InputType[InputType[\"ArrowRight\"] = 5] = \"ArrowRight\";\n    InputType[InputType[\"Delete\"] = 6] = \"Delete\";\n    InputType[InputType[\"Backspace\"] = 7] = \"Backspace\";\n    InputType[InputType[\"CtrlA\"] = 8] = \"CtrlA\";\n    InputType[InputType[\"CtrlC\"] = 9] = \"CtrlC\";\n    InputType[InputType[\"CtrlD\"] = 10] = \"CtrlD\";\n    InputType[InputType[\"CtrlE\"] = 11] = \"CtrlE\";\n    InputType[InputType[\"CtrlK\"] = 12] = \"CtrlK\";\n    InputType[InputType[\"CtrlL\"] = 13] = \"CtrlL\";\n    InputType[InputType[\"CtrlQ\"] = 14] = \"CtrlQ\";\n    InputType[InputType[\"CtrlS\"] = 15] = \"CtrlS\";\n    InputType[InputType[\"CtrlU\"] = 16] = \"CtrlU\";\n    InputType[InputType[\"End\"] = 17] = \"End\";\n    InputType[InputType[\"Enter\"] = 18] = \"Enter\";\n    InputType[InputType[\"Home\"] = 19] = \"Home\";\n    InputType[InputType[\"ShiftEnter\"] = 20] = \"ShiftEnter\";\n    InputType[InputType[\"UnsupportedControlChar\"] = 21] = \"UnsupportedControlChar\";\n    InputType[InputType[\"UnsupportedEscape\"] = 22] = \"UnsupportedEscape\";\n})(InputType = exports.InputType || (exports.InputType = {}));\nfunction parseInput(data) {\n    return Array.from(splitInput(data));\n}\nexports.parseInput = parseInput;\nfunction* splitInput(data) {\n    let text = [];\n    const it = data[Symbol.iterator]();\n    for (let next = it.next(); !next.done; next = it.next()) {\n        const c = next.value;\n        if (c.length > 1) {\n            text.push(c);\n            continue;\n        }\n        const val = c.charCodeAt(0);\n        if (text.length > 0 && (val < 0x20 || val === 0x7f)) {\n            yield {\n                inputType: InputType.Text,\n                data: text,\n            };\n            text = [];\n        }\n        if (val === 0x1b) {\n            const seq2 = it.next();\n            if (seq2.done) {\n                text.push(\"\\x1b\");\n                continue;\n            }\n            // Console\n            let inputType = InputType.UnsupportedEscape;\n            if (seq2.value !== \"[\") {\n                switch (seq2.value) {\n                    case \"\\r\":\n                        inputType = InputType.AltEnter;\n                        break;\n                }\n                yield {\n                    inputType,\n                    data: [\"\\x1b\", seq2.value],\n                };\n                continue;\n            }\n            // Ansi Escape\n            const seq3 = it.next();\n            if (seq3.done) {\n                continue;\n            }\n            // vt sequence\n            if (seq3.value >= \"0\" && seq3.value <= \"9\") {\n                let digit = seq3.value;\n                const nextDigit = it.next();\n                if (nextDigit.done) {\n                    return;\n                }\n                if (nextDigit.value >= \"0\" && nextDigit.value <= \"9\") {\n                    digit += nextDigit.value;\n                }\n                else if (nextDigit.value !== \"~\") {\n                    continue;\n                }\n                switch (digit) {\n                    case \"3\":\n                        inputType = InputType.Delete;\n                        break;\n                }\n                yield {\n                    inputType,\n                    data: [\"\\x1b\", \"[\", digit, \"~\"],\n                };\n                continue;\n            }\n            switch (seq3.value) {\n                case \"A\":\n                    inputType = InputType.ArrowUp;\n                    break;\n                case \"B\":\n                    inputType = InputType.ArrowDown;\n                    break;\n                case \"C\":\n                    inputType = InputType.ArrowRight;\n                    break;\n                case \"D\":\n                    inputType = InputType.ArrowLeft;\n                    break;\n                case \"F\":\n                    inputType = InputType.End;\n                    break;\n                case \"H\":\n                    inputType = InputType.Home;\n                    break;\n                case \"\\r\":\n                    inputType = InputType.AltEnter;\n                    break;\n            }\n            yield {\n                inputType,\n                data: [\"\\x1b\", \"[\", seq3.value],\n            };\n            continue;\n        }\n        if (val < 0x20 || val === 0x7f) {\n            let inputType = InputType.UnsupportedControlChar;\n            switch (val) {\n                case 0x1:\n                    inputType = InputType.CtrlA;\n                    break;\n                case 0x3:\n                    inputType = InputType.CtrlC;\n                    break;\n                case 0x4:\n                    inputType = InputType.CtrlD;\n                    break;\n                case 0x5:\n                    inputType = InputType.CtrlE;\n                    break;\n                case 0xb:\n                    inputType = InputType.CtrlK;\n                    break;\n                case 0x11:\n                    inputType = InputType.CtrlQ;\n                    break;\n                case 0x13:\n                    inputType = InputType.CtrlS;\n                    break;\n                case 0x15:\n                    inputType = InputType.CtrlU;\n                    break;\n                case 0xd:\n                    inputType = InputType.Enter;\n                    break;\n                case 0x7f:\n                    inputType = InputType.Backspace;\n                    break;\n                case 0xc:\n                    inputType = InputType.CtrlL;\n                    break;\n            }\n            yield {\n                inputType,\n                data: [c],\n            };\n            continue;\n        }\n        // else this is text\n        text.push(c);\n    }\n    if (text.length > 0) {\n        yield {\n            inputType: InputType.Text,\n            data: text,\n        };\n    }\n}\n//# sourceMappingURL=keymap.js.map\n\n//# sourceURL=webpack:///./node_modules/xterm-readline/lib/keymap.js?");

/***/ }),

/***/ "./node_modules/xterm-readline/lib/line.js":
/*!*************************************************!*\
  !*** ./node_modules/xterm-readline/lib/line.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LineBuffer = void 0;\nclass LineBuffer {\n    constructor() {\n        this.buf = \"\";\n        this.pos = 0;\n    }\n    buffer() {\n        return this.buf;\n    }\n    pos_buffer() {\n        return this.buf.slice(0, this.pos);\n    }\n    // Return length of buffer in bytes\n    length() {\n        return this.buf.length;\n    }\n    // Return length of buffer in characters\n    char_length() {\n        return [...this.buf].length;\n    }\n    // Set text and position\n    update(text, pos) {\n        this.buf = text;\n        this.pos = pos;\n    }\n    insert(text) {\n        const shift = text.length;\n        const push = this.pos === this.buf.length;\n        if (push) {\n            this.buf = this.buf + text;\n        }\n        else {\n            this.buf = this.buf.slice(0, this.pos) + text + this.buf.slice(this.pos);\n        }\n        this.pos += shift;\n        return push;\n    }\n    moveBack(n) {\n        const pos = this.prevPos(n);\n        if (pos !== undefined) {\n            this.pos = pos;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    moveForward(n) {\n        const pos = this.nextPos(n);\n        if (pos !== undefined) {\n            this.pos = pos;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    moveHome() {\n        const start = this.startOfLine();\n        if (this.pos > start) {\n            this.pos = start;\n            return true;\n        }\n        return false;\n    }\n    moveEnd() {\n        const end = this.endOfLine();\n        if (this.pos === end) {\n            return false;\n        }\n        this.pos = end;\n        return true;\n    }\n    startOfLine() {\n        const start = this.buf.slice(0, this.pos).lastIndexOf(\"\\n\");\n        if (start !== -1) {\n            return start + 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    endOfLine() {\n        const end = this.buf.slice(this.pos).indexOf(\"\\n\");\n        if (end !== -1) {\n            return this.pos + end;\n        }\n        else {\n            return this.buf.length;\n        }\n    }\n    moveLineUp(n) {\n        const off = this.buf.slice(0, this.pos).lastIndexOf(\"\\n\");\n        if (off === -1) {\n            return false;\n        }\n        const column = [...this.buf.slice(off + 1, this.pos)].length;\n        let destStart = this.buf.slice(0, off).lastIndexOf(\"\\n\");\n        if (destStart === -1) {\n            destStart = 0;\n        }\n        else {\n            destStart = destStart + 1;\n        }\n        let destEnd = off;\n        for (let i = 1; i < n; i++) {\n            if (destStart === 0) {\n                break;\n            }\n            destEnd = destStart - 1;\n            destStart = this.buf.slice(0, destEnd).lastIndexOf(\"\\n\");\n            if (destStart === -1) {\n                destStart = 0;\n            }\n            else {\n                destStart = destStart + 1;\n            }\n        }\n        const slice = [...this.buf.slice(destStart, destEnd)].slice(0, column);\n        let gIdx = off;\n        if (slice.length > 0) {\n            gIdx = slice.map((c) => c.length).reduce((acc, m) => acc + m, 0);\n            gIdx = destStart + gIdx;\n        }\n        this.pos = gIdx;\n        return true;\n    }\n    moveLineDown(n) {\n        const off = this.buf.slice(this.pos).indexOf(\"\\n\");\n        if (off === -1) {\n            return false;\n        }\n        let lineStart = this.buf.slice(0, this.pos).lastIndexOf(\"\\n\");\n        if (lineStart === -1) {\n            lineStart = 0;\n        }\n        else {\n            lineStart += 1;\n        }\n        const column = [...this.buf.slice(lineStart, this.pos)].length;\n        let destStart = this.pos + off + 1;\n        let destEnd = this.buf.slice(destStart).indexOf(\"\\n\");\n        if (destEnd === -1) {\n            destEnd = this.buf.length;\n        }\n        else {\n            destEnd = destStart + destEnd;\n        }\n        for (let i = 1; i < n; i++) {\n            if (destEnd === this.buf.length) {\n                break;\n            }\n            destStart = destEnd + 1;\n            destEnd = this.buf.slice(destStart).indexOf(\"\\n\");\n            if (destEnd === -1) {\n                destEnd = this.buf.length;\n            }\n            else {\n                destEnd = destStart + destEnd;\n            }\n        }\n        const slice = [...this.buf.slice(destStart, destEnd)];\n        if (column < slice.length) {\n            this.pos =\n                slice\n                    .slice(0, column)\n                    .map((c) => c.length)\n                    .reduce((acc, m) => acc + m, 0) + destStart;\n        }\n        else {\n            this.pos = destEnd;\n        }\n        return true;\n    }\n    // Set position of cursor\n    set_pos(pos) {\n        this.pos = pos;\n    }\n    // Return the position of the character preceding\n    // pos\n    prevPos(n) {\n        if (this.pos === 0) {\n            return undefined;\n        }\n        const buf = this.buf.slice(0, this.pos);\n        return (this.pos -\n            [...buf]\n                .slice(-n)\n                .map((c) => c.length)\n                .reduce((acc, m) => acc + m, 0));\n    }\n    // Return the position of the character following the\n    // current pos\n    nextPos(n) {\n        if (this.pos === this.buf.length) {\n            return undefined;\n        }\n        const buf = this.buf.slice(this.pos);\n        return (this.pos +\n            [...buf]\n                .slice(0, n)\n                .map((c) => c.length)\n                .reduce((acc, m) => acc + m, 0));\n    }\n    backspace(n) {\n        const newPos = this.prevPos(n);\n        if (newPos === undefined) {\n            return false;\n        }\n        this.buf = this.buf.slice(0, newPos) + this.buf.slice(this.pos);\n        this.pos = newPos;\n        return true;\n    }\n    delete(n) {\n        const nextChar = this.nextPos(n);\n        if (nextChar !== undefined) {\n            this.buf = this.buf.slice(0, this.pos) + this.buf.slice(nextChar);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    deleteEndOfLine() {\n        if (this.buf.length == 0 || this.pos == this.buf.length) {\n            return false;\n        }\n        const start = this.pos;\n        const end = this.endOfLine();\n        if (start == end) {\n            this.delete(1);\n        }\n        else {\n            this.buf = this.buf.slice(0, start) + this.buf.slice(end);\n        }\n        return true;\n    }\n}\nexports.LineBuffer = LineBuffer;\n//# sourceMappingURL=line.js.map\n\n//# sourceURL=webpack:///./node_modules/xterm-readline/lib/line.js?");

/***/ }),

/***/ "./node_modules/xterm-readline/lib/readline.js":
/*!*****************************************************!*\
  !*** ./node_modules/xterm-readline/lib/readline.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Readline = void 0;\nconst keymap_1 = __webpack_require__(/*! ./keymap */ \"./node_modules/xterm-readline/lib/keymap.js\");\nconst state_1 = __webpack_require__(/*! ./state */ \"./node_modules/xterm-readline/lib/state.js\");\nconst history_1 = __webpack_require__(/*! ./history */ \"./node_modules/xterm-readline/lib/history.js\");\nconst tty_1 = __webpack_require__(/*! ./tty */ \"./node_modules/xterm-readline/lib/tty.js\");\nconst highlight_1 = __webpack_require__(/*! ./highlight */ \"./node_modules/xterm-readline/lib/highlight.js\");\nclass Readline {\n    constructor() {\n        this.highlighter = new highlight_1.IdentityHighlighter();\n        this.history = new history_1.History(50);\n        this.disposables = [];\n        this.watermark = 0;\n        this.highWatermark = 10000;\n        this.lowWatermark = 1000;\n        this.highWater = false;\n        this.state = new state_1.State(\">\", this.tty(), this.highlighter, this.history);\n        this.checkHandler = () => true;\n        this.ctrlCHandler = () => {\n            return;\n        };\n        this.pauseHandler = (resume) => {\n            return;\n        };\n        this.history.restoreFromLocalStorage();\n    }\n    /**\n     * Activate this addon - this function is called by xterm's\n     * loadAddon().\n     *\n     * @param term - The terminal this readline is attached to.\n     */\n    activate(term) {\n        this.term = term;\n        this.term.onData(this.readData.bind(this));\n        this.term.attachCustomKeyEventHandler(this.handleKeyEvent.bind(this));\n    }\n    /**\n     * Dispose\n     *\n     */\n    dispose() {\n        this.disposables.forEach((d) => d.dispose());\n    }\n    /**\n     * Manually append a line to the top of the readline's history.\n     *\n     * @param text - The text to append to history.\n     */\n    appendHistory(text) {\n        this.history.append(text);\n    }\n    /**\n     * Set the highlighter handler for this readline. This is used to\n     * create custom highlighting functionality (e.g. for syntax highlighting\n     * or bracket matching).\n     *\n     * @param highlighter - A handler to handle all highlight callbacks.\n     */\n    setHighlighter(highlighter) {\n        this.highlighter = highlighter;\n    }\n    /**\n     * Set the check callback. This callback is used by readline to determine if input\n     * requires additiona lines when the user presses 'enter'.\n     *\n     * @param fn - A function (string) -> boolean that should return true if the input\n     *             is complete, and false if a line (\\n) should be added to the input.\n     */\n    setCheckHandler(fn) {\n        this.checkHandler = fn;\n    }\n    /**\n     * Set the ctrl-c handler. This function will be called if ctrl-c is encountered\n     * between readline reads. This may be used in circumstances where input from the\n     * user may result in a long running task that can be cancelled.\n     *\n     * @param fn - The ctrl-c handler.\n     */\n    setCtrlCHandler(fn) {\n        this.ctrlCHandler = fn;\n    }\n    /**\n     * Set the callback to be called when the user presses ctrl-s/ctrl-q.\n     *\n     * @param fn - The pause handler\n     */\n    setPauseHandler(fn) {\n        this.pauseHandler = fn;\n    }\n    /**\n     * writeReady() may be used to implement basic output flow control. This function\n     * will return false if the writes to the terminal initiated by Readline have\n     * reached a highwater mark.\n     *\n     * @returns true if this terminal is accepting more input.\n     */\n    writeReady() {\n        return !this.highWater;\n    }\n    /**\n     * Write text to the terminal.\n     *\n     * @param text - The text to write to the terminal.\n     */\n    write(text) {\n        if (text === \"\\n\") {\n            text = \"\\r\\n\";\n        }\n        else {\n            text = text.replace(/^\\n/, \"\\r\\n\");\n            text = text.replace(/([^\\r])\\n/g, \"$1\\r\\n\");\n        }\n        const outputLength = text.length;\n        this.watermark += outputLength;\n        if (this.watermark > this.highWatermark) {\n            this.highWater = true;\n        }\n        if (this.term) {\n            this.term.write(text, () => {\n                this.watermark = Math.max(this.watermark - outputLength, 0);\n                if (this.highWater && this.watermark < this.lowWatermark) {\n                    this.highWater = false;\n                }\n            });\n        }\n    }\n    /**\n     * Write text to the terminal.\n     *\n     * @param text - The text to write to the terminal\n     */\n    print(text) {\n        return this.write(text);\n    }\n    /**\n     * Write text to the terminal and append with \"\\r\\n\".\n     *\n     * @param text - The text to write to the terminal./\n     * @returns\n     */\n    println(text) {\n        return this.write(text + \"\\r\\n\");\n    }\n    /**\n     * Obtain an output interface to this terminal.\n     *\n     * @returns Output\n     */\n    output() {\n        return this;\n    }\n    /**\n     * Obtain a tty interface to this terminal.\n     *\n     * @returns A tty\n     */\n    tty() {\n        var _a, _b;\n        if (((_b = (_a = this.term) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.tabStopWidth) !== undefined) {\n            return new tty_1.Tty(this.term.cols, this.term.rows, this.term.options.tabStopWidth, this.output());\n        }\n        else {\n            return new tty_1.Tty(0, 0, 8, this.output());\n        }\n    }\n    /**\n     * Display the given prompt and wait for one line of input from the\n     * terminal. The returned promise will be executed when a line has been\n     * read from the terminal.\n     *\n     * @param prompt The prompt to use.\n     * @returns A promise to be called when the input has been read.\n     */\n    read(prompt) {\n        return new Promise((resolve, reject) => {\n            if (this.term === undefined) {\n                reject(\"addon is not active\");\n                return;\n            }\n            this.state = new state_1.State(prompt, this.tty(), this.highlighter, this.history);\n            this.state.refresh();\n            this.activeRead = { prompt, resolve, reject };\n        });\n    }\n    handleKeyEvent(event) {\n        if (event.key === \"Enter\" && event.shiftKey) {\n            if (event.type === \"keydown\") {\n                this.readKey({\n                    inputType: keymap_1.InputType.ShiftEnter,\n                    data: [\"\\r\"],\n                });\n            }\n            return false;\n        }\n        return true;\n    }\n    readData(data) {\n        const input = (0, keymap_1.parseInput)(data);\n        if (input.length > 1 ||\n            (input[0].inputType === keymap_1.InputType.Text && input[0].data.length > 1)) {\n            this.readPaste(input);\n            return;\n        }\n        this.readKey(input[0]);\n    }\n    readPaste(input) {\n        const mappedInput = input.map((it) => {\n            if (it.inputType === keymap_1.InputType.Enter) {\n                return { inputType: keymap_1.InputType.Text, data: [\"\\n\"] };\n            }\n            return it;\n        });\n        for (const it of mappedInput) {\n            if (it.inputType === keymap_1.InputType.Text) {\n                this.state.editInsert(it.data.join(\"\"));\n            }\n            else {\n                this.readKey(it);\n            }\n        }\n    }\n    readKey(input) {\n        var _a, _b, _c;\n        if (this.activeRead === undefined) {\n            switch (input.inputType) {\n                case keymap_1.InputType.CtrlC:\n                    this.ctrlCHandler();\n                    break;\n                case keymap_1.InputType.CtrlL:\n                    this.write(\"\\x1b[H\\x1b[2J\");\n                    break;\n            }\n            return;\n        }\n        switch (input.inputType) {\n            case keymap_1.InputType.Text:\n                this.state.editInsert(input.data.join(\"\"));\n                break;\n            case keymap_1.InputType.AltEnter:\n            case keymap_1.InputType.ShiftEnter:\n                this.state.editInsert(\"\\n\");\n                break;\n            case keymap_1.InputType.Enter:\n                if (this.checkHandler(this.state.buffer())) {\n                    this.state.moveCursorToEnd();\n                    (_a = this.term) === null || _a === void 0 ? void 0 : _a.write(\"\\r\\n\");\n                    this.history.append(this.state.buffer());\n                    (_b = this.activeRead) === null || _b === void 0 ? void 0 : _b.resolve(this.state.buffer());\n                    this.activeRead = undefined;\n                }\n                else {\n                    this.state.editInsert(\"\\n\");\n                }\n                break;\n            case keymap_1.InputType.CtrlC:\n                this.state.moveCursorToEnd();\n                (_c = this.term) === null || _c === void 0 ? void 0 : _c.write(\"^C\\r\\n\");\n                this.state = new state_1.State(this.activeRead.prompt, this.tty(), this.highlighter, this.history);\n                this.state.refresh();\n                break;\n            case keymap_1.InputType.CtrlS:\n                this.pauseHandler(false);\n                break;\n            case keymap_1.InputType.CtrlU:\n                this.state.update(\"\");\n                break;\n            case keymap_1.InputType.CtrlK:\n                this.state.editDeleteEndOfLine();\n                break;\n            case keymap_1.InputType.CtrlQ:\n                this.pauseHandler(true);\n                break;\n            case keymap_1.InputType.CtrlL:\n                this.state.clearScreen();\n                break;\n            case keymap_1.InputType.Home:\n            case keymap_1.InputType.CtrlA:\n                this.state.moveCursorHome();\n                break;\n            case keymap_1.InputType.End:\n            case keymap_1.InputType.CtrlE:\n                this.state.moveCursorEnd();\n                break;\n            case keymap_1.InputType.Backspace:\n                this.state.editBackspace(1);\n                break;\n            case keymap_1.InputType.Delete:\n            case keymap_1.InputType.CtrlD:\n                this.state.editDelete(1);\n                break;\n            case keymap_1.InputType.ArrowLeft:\n                this.state.moveCursorBack(1);\n                break;\n            case keymap_1.InputType.ArrowRight:\n                this.state.moveCursorForward(1);\n                break;\n            case keymap_1.InputType.ArrowUp:\n                this.state.moveCursorUp(1);\n                break;\n            case keymap_1.InputType.ArrowDown:\n                this.state.moveCursorDown(1);\n                break;\n            case keymap_1.InputType.UnsupportedControlChar:\n            case keymap_1.InputType.UnsupportedEscape:\n                break;\n        }\n    }\n}\nexports.Readline = Readline;\n//# sourceMappingURL=readline.js.map\n\n//# sourceURL=webpack:///./node_modules/xterm-readline/lib/readline.js?");

/***/ }),

/***/ "./node_modules/xterm-readline/lib/state.js":
/*!**************************************************!*\
  !*** ./node_modules/xterm-readline/lib/state.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.State = exports.Layout = exports.Position = void 0;\n/* tslint:disable:max-classes-per-file */\nconst line_1 = __webpack_require__(/*! ./line */ \"./node_modules/xterm-readline/lib/line.js\");\nconst string_width_1 = __importDefault(__webpack_require__(/*! string-width */ \"./node_modules/string-width/index.js\"));\nclass Position {\n    constructor(rows, cols) {\n        if (rows !== undefined) {\n            this.row = rows;\n        }\n        else {\n            this.row = 0;\n        }\n        if (cols !== undefined) {\n            this.col = cols;\n        }\n        else {\n            this.col = 0;\n        }\n    }\n}\nexports.Position = Position;\nclass Layout {\n    constructor(promptSize) {\n        this.promptSize = promptSize;\n        this.cursor = new Position();\n        this.end = new Position();\n    }\n}\nexports.Layout = Layout;\nclass State {\n    constructor(prompt, tty, highlighter, history) {\n        this.line = new line_1.LineBuffer();\n        this.highlighting = false;\n        this.prompt = prompt;\n        this.tty = tty;\n        this.highlighter = highlighter;\n        this.history = history;\n        this.promptSize = tty.calculatePosition(prompt, new Position());\n        this.layout = new Layout(this.promptSize);\n    }\n    buffer() {\n        return this.line.buffer();\n    }\n    shouldHighlight() {\n        const highlighting = this.highlighter.highlightChar(this.line.buf, this.line.pos);\n        if (highlighting) {\n            this.highlighting = true;\n            return true;\n        }\n        else if (this.highlighting) {\n            this.highlighting = false;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    clearScreen() {\n        this.tty.clearScreen();\n        this.layout.cursor = new Position();\n        this.layout.end = new Position();\n        this.refresh();\n    }\n    editInsert(text) {\n        const push = this.line.insert(text);\n        const multiline = text.includes(\"\\n\");\n        if (push && !multiline) {\n            const width = (0, string_width_1.default)(text);\n            if (width > 0 &&\n                this.layout.cursor.col + width < this.tty.col &&\n                !this.shouldHighlight()) {\n                this.layout.cursor.col += width;\n                this.layout.end.col += width;\n                this.tty.write(text);\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else {\n            this.refresh();\n        }\n    }\n    update(text) {\n        this.line.update(text, text.length);\n        this.refresh();\n    }\n    editBackspace(n) {\n        if (this.line.backspace(n)) {\n            this.refresh();\n        }\n    }\n    editDelete(n) {\n        if (this.line.delete(n)) {\n            this.refresh();\n        }\n    }\n    editDeleteEndOfLine() {\n        if (this.line.deleteEndOfLine()) {\n            this.refresh();\n        }\n    }\n    refresh() {\n        const newLayout = this.tty.computeLayout(this.promptSize, this.line);\n        this.tty.refreshLine(this.prompt, this.line, this.layout, newLayout, this.highlighter);\n        this.layout = newLayout;\n    }\n    moveCursorBack(n) {\n        if (this.line.moveBack(n)) {\n            this.moveCursor();\n        }\n    }\n    moveCursorForward(n) {\n        if (this.line.moveForward(n)) {\n            this.moveCursor();\n        }\n    }\n    moveCursorUp(n) {\n        if (this.line.moveLineUp(n)) {\n            this.moveCursor();\n        }\n        else {\n            this.previousHistory();\n        }\n    }\n    moveCursorDown(n) {\n        if (this.line.moveLineDown(n)) {\n            this.moveCursor();\n        }\n        else {\n            this.nextHistory();\n        }\n    }\n    moveCursorHome() {\n        if (this.line.moveHome()) {\n            this.moveCursor();\n        }\n    }\n    moveCursorEnd() {\n        if (this.line.moveEnd()) {\n            this.moveCursor();\n        }\n    }\n    moveCursorToEnd() {\n        if (this.layout.cursor === this.layout.end) {\n            return;\n        }\n        this.tty.moveCursor(this.layout.cursor, this.layout.end);\n        this.layout.cursor = Object.assign({}, this.layout.end);\n    }\n    previousHistory() {\n        if (this.history.cursor === -1 && this.line.length() > 0) {\n            return;\n        }\n        const prev = this.history.prev();\n        if (prev !== undefined) {\n            this.update(prev);\n        }\n    }\n    nextHistory() {\n        if (this.history.cursor === -1) {\n            return;\n        }\n        const next = this.history.next();\n        if (next !== undefined) {\n            this.update(next);\n        }\n        else {\n            this.update(\"\");\n        }\n    }\n    moveCursor() {\n        const cursor = this.tty.calculatePosition(this.line.pos_buffer(), this.promptSize);\n        if (cursor === this.layout.cursor) {\n            return;\n        }\n        if (this.shouldHighlight()) {\n            this.refresh();\n        }\n        else {\n            this.tty.moveCursor(this.layout.cursor, cursor);\n            this.layout.promptSize = Object.assign({}, this.promptSize);\n            this.layout.cursor = Object.assign({}, cursor);\n        }\n    }\n}\nexports.State = State;\n//# sourceMappingURL=state.js.map\n\n//# sourceURL=webpack:///./node_modules/xterm-readline/lib/state.js?");

/***/ }),

/***/ "./node_modules/xterm-readline/lib/tty.js":
/*!************************************************!*\
  !*** ./node_modules/xterm-readline/lib/tty.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tty = void 0;\nconst string_width_1 = __importDefault(__webpack_require__(/*! string-width */ \"./node_modules/string-width/index.js\"));\nclass Tty {\n    constructor(col, row, tabWidth, out) {\n        this.tabWidth = tabWidth;\n        this.col = col;\n        this.row = row;\n        this.out = out;\n    }\n    write(text) {\n        return this.out.write(text);\n    }\n    print(text) {\n        return this.out.print(text);\n    }\n    println(text) {\n        return this.out.println(text);\n    }\n    clearScreen() {\n        this.out.write(\"\\x1b[H\\x1b[2J\");\n    }\n    // Calculate the number of colums and rows required to print\n    // text on a this.cols wide terminal starting at orig\n    calculatePosition(text, orig) {\n        const pos = Object.assign({}, orig);\n        let escSeq = 0;\n        [...text].forEach((c) => {\n            if (c === \"\\n\") {\n                pos.row += 1;\n                pos.col = 0;\n                return;\n            }\n            let cw = 0;\n            if (c === \"\\t\") {\n                cw = this.tabWidth - (pos.col % this.tabWidth);\n            }\n            else {\n                let size;\n                [size, escSeq] = width(c, escSeq);\n                cw = size;\n            }\n            pos.col += cw;\n            if (pos.col > this.col) {\n                pos.row += 1;\n                pos.col = cw;\n            }\n        });\n        if (pos.col === this.col) {\n            pos.col = 0;\n            pos.row += 1;\n        }\n        return pos;\n    }\n    computeLayout(promptSize, line) {\n        const newPromptSize = Object.assign({}, promptSize);\n        const pos = line.pos;\n        const cursor = this.calculatePosition(line.buf.slice(0, line.pos), promptSize);\n        const end = pos === line.buf.length\n            ? Object.assign({}, cursor) : this.calculatePosition(line.buf.slice(pos), cursor);\n        const newLayout = {\n            promptSize: newPromptSize,\n            cursor,\n            end,\n        };\n        return newLayout;\n    }\n    refreshLine(prompt, line, oldLayout, newLayout, highlighter) {\n        const cursor = newLayout.cursor;\n        const endPos = newLayout.end;\n        this.clearOldRows(oldLayout);\n        this.write(highlighter.highlightPrompt(prompt));\n        this.write(highlighter.highlight(line.buf, line.pos));\n        if (endPos.col === 0 &&\n            endPos.row > 0 &&\n            line.buf[line.buf.length - 1] !== \"\\n\") {\n            this.write(\"\\n\");\n        }\n        const newCursorRowMovement = endPos.row - cursor.row;\n        if (newCursorRowMovement > 0) {\n            this.write(`\\x1b[${newCursorRowMovement}A`);\n        }\n        if (cursor.col > 0) {\n            this.write(`\\r\\x1b[${cursor.col}C`);\n        }\n        else {\n            this.write(\"\\r\");\n        }\n    }\n    clearOldRows(layout) {\n        const currentRow = layout.cursor.row;\n        const oldRows = layout.end.row;\n        const cursorRowMovement = Math.max(oldRows - currentRow, 0);\n        if (cursorRowMovement > 0) {\n            this.write(`\\x1b[${cursorRowMovement}B`);\n        }\n        for (let i = 0; i < oldRows; i++) {\n            this.write(\"\\r\\x1b[0K\\x1b[A\");\n        }\n        this.write(\"\\r\\x1b[0K\");\n    }\n    moveCursor(oldCursor, newCursor) {\n        if (newCursor.row > oldCursor.row) {\n            // Move Down\n            const rowShift = newCursor.row - oldCursor.row;\n            if (rowShift === 1) {\n                this.write(\"\\x1b[B\");\n            }\n            else {\n                this.write(`\\x1b[${rowShift}B`);\n            }\n        }\n        else if (newCursor.row < oldCursor.row) {\n            // Move Up\n            const rowShift = oldCursor.row - newCursor.row;\n            if (rowShift === 1) {\n                this.write(\"\\x1b[A\");\n            }\n            else {\n                this.write(`\\x1b[${rowShift}A`);\n            }\n        }\n        if (newCursor.col > oldCursor.col) {\n            // Move Right\n            const colShift = newCursor.col - oldCursor.col;\n            if (colShift === 1) {\n                this.write(\"\\x1b[C\");\n            }\n            else {\n                this.write(`\\x1b[${colShift}C`);\n            }\n        }\n        else if (newCursor.col < oldCursor.col) {\n            const colShift = oldCursor.col - newCursor.col;\n            if (colShift === 1) {\n                this.write(\"\\x1b[D\");\n            }\n            else {\n                this.write(`\\x1b[${colShift}D`);\n            }\n        }\n        return;\n    }\n}\nexports.Tty = Tty;\n// Return the column width of text when printed\nfunction width(text, escSeq) {\n    if (escSeq === 1) {\n        if (text === \"[\") {\n            return [0, 2];\n        }\n        else {\n            return [0, 0];\n        }\n    }\n    else if (escSeq === 2) {\n        if (!(text === \";\" || (text[0] >= \"0\" && text[0] <= \"9\"))) {\n            // unsupported\n            return [0, 0];\n        }\n        return [0, escSeq];\n    }\n    else if (text === \"\\x1b\") {\n        return [0, 1];\n    }\n    else if (text === \"\\n\") {\n        return [0, escSeq];\n    }\n    else {\n        return [(0, string_width_1.default)(text), escSeq];\n    }\n}\n//# sourceMappingURL=tty.js.map\n\n//# sourceURL=webpack:///./node_modules/xterm-readline/lib/tty.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xterm_readline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xterm-readline */ \"./node_modules/xterm-readline/lib/readline.js\");\n\n\nconst arity = document.getElementById(\"arity\");\nconst direction = document.getElementById(\"direction\");\nconst internal = document.getElementById(\"internal\");\nconst external = document.getElementById(\"external\");\nconst discreteness = document.getElementById(\"discreteness\");\nconst startup = document.getElementById(\"startup\");\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nif(urlParams.has('arity')) {\n    arity.value = urlParams.get('arity');\n}\nif(urlParams.has('direction')) {\n    direction.value = urlParams.get('direction');\n}\nif(urlParams.has('internal')) {\n    internal.checked = true;\n}\nif(urlParams.has('external')) {\n    external.checked = true;\n}\nif(urlParams.has('discreteness')) {\n    discreteness.checked = true;\n}\nif(urlParams.has('startup')) {\n    startup.value = urlParams.get('startup');\n}\nif(urlParams.has('dtt')) {\n    arity.value = 1;\n    direction.value = 'd';\n    external.checked = true;\n}\n\nconst term = new Terminal({\n    cursorBlink: true,\n    fontSize: 20,\n    rows: 30\n});\nterm.open(document.getElementById('terminal'));\nconst rl = new xterm_readline__WEBPACK_IMPORTED_MODULE_0__.Readline();\nterm.loadAddon(rl);\n\nrl.setCheckHandler((text) => {\n    if (text.endsWith(\"\\n\")) {\n        return true;\n    }\n    return false;\n});\n\nfunction readLine() {\n    term.write(\"\\x1B[4mnarya\\x1B[0m\\n\\r\");\n    rl.read(\"\").then(processLine);\n}\n\nfunction processLine(text) {\n    rl.println(Narya.execute(text));\n    setTimeout(readLine);\n}\n\nfunction start() {\n    term.clear();\n\n    var startupcode = startup.value\n    \n    var err = Narya.start(arity.value, direction.value, internal.checked, discreteness.checked, startupcode);\n    if (!err) {\n        arity.disabled = true;\n        direction.disabled = true;\n        internal.disabled = true;\n        external.disabled = true;\n        discreteness.disabled = true;\n        startup.disabled = true;\n        readLine();\n        term.focus();\n    } else {\n        rl.println(\"\\n\" + err + \"Please fix the error and reload the page.\");\n    }\n}\n\ndocument.getElementById(\"start\").addEventListener('click', start);\n\nfunction insert(str) {\n    term.input(str);\n    term.focus();\n}\n\nconst palette = document.getElementById('palette');\n\nfunction addToPalette(str) {\n    var b = document.createElement('button');\n    b.textContent = str;\n    b.style = \"font-size:1.2em\";\n    b.addEventListener('click', function() { insert(str) });\n    palette.appendChild(b);\n}\n\nconst characters = ['→', '↦', '⤇', '≔', '…', '⁽', '⁾', '⁰', '¹', '²', '³', '⁴', '⁵', '⁶', '⁷', '⁸', '⁹', 'ᵃ', 'ᵇ', 'ᶜ', 'ᵈ', 'ᵉ', 'ᶠ', 'ᵍ', 'ʰ', 'ⁱ', 'ʲ', 'ᵏ', 'ˡ', 'ᵐ', 'ⁿ', 'ᵒ', 'ᵖ', '𐞥', 'ʳ', 'ˢ', 'ᵗ', 'ᵘ', 'ᵛ', 'ʷ', 'ˣ', 'ʸ', 'ᶻ', '₀', '₁', '₂', '₃', '₄', '₅', '₆', '₇', '₈', '₉', '×', '⊔', '⊎', '♯', '♭', '♮', 'ℂ', 'ℕ', 'ℝ', 'ℤ', '⟨', '⟩', '⟦', '⟧', '≡', '≤', '≥', '≠', 'α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ', 'ι', 'κ', 'λ', 'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω', 'Γ', 'Δ', 'Θ', 'Λ', 'Ξ', 'Π', 'Σ', 'Φ', 'Ψ', 'Ω'];\ncharacters.forEach(addToPalette);\n\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;